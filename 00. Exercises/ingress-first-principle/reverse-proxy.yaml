apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    events {
      worker_connections 1024;
    }
    
    http {
      server {
        listen 80;
        server_name k8s.rshv.xyz;
        
        location / {
          proxy_pass http://backend.backend-team.svc.cluster.local:3000;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection 'upgrade';
          proxy_set_header Host $host;
          proxy_cache_bypass $http_upgrade;
        }
      }
      server {
        listen 80;
        server_name k8s2.rshv.xyz;
        
        location / {
          proxy_pass http://fe.fe-team.svc.cluster.local:8080;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection 'upgrade';
          proxy_set_header Host $host;
          proxy_cache_bypass $http_upgrade;
        }
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ingress
  template:
    metadata:
      labels:
        app: ingress
    spec:
      containers: 
        - name: ingress
          image: nginx:latest
          ports: 
            - containerPort: 80
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: ingress
spec:
  type: LoadBalancer
  selector:
    app: ingress
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
